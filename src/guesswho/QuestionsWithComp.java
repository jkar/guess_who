/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guesswho;

import java.awt.Image;
import java.util.ArrayList;
import java.util.Arrays;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author yiannis
 */
public class QuestionsWithComp extends javax.swing.JFrame {

    //αν εγινε ηδη μια ερωτηση σ αυτον τον γυρο
    int quesForThisRound = -1;
    
    //poianou seira einai
    private static int seira = 1;
    
    static Player p1;
    static Player p2;
    static Image img;
    
    /**
     * Creates new form QuestionsWithComp
     */
    public QuestionsWithComp() {
        initComponents();
        
        setLabelImage();
       
        
        setCard(0,Tyler,"Tyler.png");
        setCard(1,Joseph,"Joseph.png");
        setCard(2,Nick,"Nick.png");
        setCard(3,Brandon,"Brandon.png");
        setCard(4,Connor,"Connor.png");
        setCard(5,Kyle,"Kyle.png");
                 
    }
    
    public QuestionsWithComp(Player p1, Player p2) {
        initComponents();
        
        this.p1 = p1;
        this.p2 = p2;
        setLabelImage();
        try {
        img = ImageIO.read(getClass().getResource("Yellow.png"));
        } catch (Exception ex) {
        System.out.println(ex);
        }
        
        setCard(0,Tyler,"Tyler.png");
        setCard(1,Joseph,"Joseph.png");
        setCard(2,Nick,"Nick.png");
        setCard(3,Brandon,"Brandon.png");
        setCard(4,Connor,"Connor.png");
        setCard(5,Kyle,"Kyle.png");
                
    }
    
    
    public void setCard(int i,JButton jb, String im) {
           if (p1.mauresKartes[i]==1) {
         try {
    Image img1 = ImageIO.read(getClass().getResource(im));
    jb.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
            } else {
                jb.setIcon(new ImageIcon(img));
            }
    }
    
    public void setLabelImage() {
        
            int im = 0;
            im = p1.getPlayerToBeFound();
             
           if (im == 0) {
                try {
    Image img1 = ImageIO.read(getClass().getResource("Tyler.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }
           if (im == 1) {
               try { 
    Image img1 = ImageIO.read(getClass().getResource("Joseph.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }
           if (im == 2) {
               try { 
    Image img1 = ImageIO.read(getClass().getResource("Nick.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }
           if (im == 3) {
               try { 
    Image img1 = ImageIO.read(getClass().getResource("Brandon.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }
           if (im == 4) {
               try { 
    Image img1 = ImageIO.read(getClass().getResource("Connor.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }
           if (im == 5) {
               try { 
    Image img1 = ImageIO.read(getClass().getResource("Kyle.png"));
    jLabel5.setIcon(new ImageIcon(img1));
  } catch (Exception ex) {
    System.out.println(ex);
  }
           }        
        }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Tyler = new javax.swing.JButton();
        Joseph = new javax.swing.JButton();
        Nick = new javax.swing.JButton();
        Brandon = new javax.swing.JButton();
        Connor = new javax.swing.JButton();
        Kyle = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        moustacheButton = new javax.swing.JButton();
        wearGlasses = new javax.swing.JButton();
        wearHat = new javax.swing.JButton();
        isItMale = new javax.swing.JButton();
        hasBeards = new javax.swing.JButton();
        isBald = new javax.swing.JButton();
        bigEyeBrows = new javax.swing.JButton();
        eyesColor = new javax.swing.JButton();
        hairColor = new javax.swing.JButton();
        hatColor = new javax.swing.JButton();
        skinColor = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nextPlayer = new javax.swing.JButton();
        findWho = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 1000));
        setPreferredSize(new java.awt.Dimension(1000, 1000));
        getContentPane().setLayout(null);

        Tyler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TylerActionPerformed(evt);
            }
        });
        getContentPane().add(Tyler);
        Tyler.setBounds(10, 20, 160, 230);

        Joseph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JosephActionPerformed(evt);
            }
        });
        getContentPane().add(Joseph);
        Joseph.setBounds(180, 20, 150, 230);

        Nick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NickActionPerformed(evt);
            }
        });
        getContentPane().add(Nick);
        Nick.setBounds(340, 20, 150, 230);

        Brandon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrandonActionPerformed(evt);
            }
        });
        getContentPane().add(Brandon);
        Brandon.setBounds(500, 20, 140, 230);

        Connor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnorActionPerformed(evt);
            }
        });
        getContentPane().add(Connor);
        Connor.setBounds(650, 20, 140, 230);

        Kyle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KyleActionPerformed(evt);
            }
        });
        getContentPane().add(Kyle);
        Kyle.setBounds(800, 20, 130, 230);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Player1 asks a question:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(300, 400, 170, 17);

        moustacheButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        moustacheButton.setText("Does he have moustache?");
        moustacheButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moustacheButtonActionPerformed(evt);
            }
        });
        getContentPane().add(moustacheButton);
        moustacheButton.setBounds(610, 260, 235, 23);

        wearGlasses.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        wearGlasses.setText("Does he/she wear glasses?");
        wearGlasses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wearGlassesActionPerformed(evt);
            }
        });
        getContentPane().add(wearGlasses);
        wearGlasses.setBounds(610, 290, 235, 23);

        wearHat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        wearHat.setText("Does he/she wear hat?");
        wearHat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wearHatActionPerformed(evt);
            }
        });
        getContentPane().add(wearHat);
        wearHat.setBounds(610, 320, 235, 23);

        isItMale.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        isItMale.setText("Is it a male?");
        isItMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isItMaleActionPerformed(evt);
            }
        });
        getContentPane().add(isItMale);
        isItMale.setBounds(610, 350, 235, 23);

        hasBeards.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hasBeards.setText("Does he have beards?");
        hasBeards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hasBeardsActionPerformed(evt);
            }
        });
        getContentPane().add(hasBeards);
        hasBeards.setBounds(610, 370, 235, 23);

        isBald.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        isBald.setText("Is he bald?");
        isBald.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isBaldActionPerformed(evt);
            }
        });
        getContentPane().add(isBald);
        isBald.setBounds(610, 400, 235, 23);

        bigEyeBrows.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bigEyeBrows.setText("Does he/she have big eyebrows?");
        bigEyeBrows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigEyeBrowsActionPerformed(evt);
            }
        });
        getContentPane().add(bigEyeBrows);
        bigEyeBrows.setBounds(610, 430, 235, 23);

        eyesColor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        eyesColor.setText("What is the color of the eyes?");
        eyesColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eyesColorActionPerformed(evt);
            }
        });
        getContentPane().add(eyesColor);
        eyesColor.setBounds(610, 460, 235, 23);

        hairColor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hairColor.setText("What is the color of the hair?");
        hairColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hairColorActionPerformed(evt);
            }
        });
        getContentPane().add(hairColor);
        hairColor.setBounds(610, 490, 235, 23);

        hatColor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        hatColor.setText("What is the color of the hat?");
        hatColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hatColorActionPerformed(evt);
            }
        });
        getContentPane().add(hatColor);
        hatColor.setBounds(610, 530, 235, 23);

        skinColor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        skinColor.setText("What is the color of the skin?");
        skinColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skinColorActionPerformed(evt);
            }
        });
        getContentPane().add(skinColor);
        skinColor.setBounds(610, 560, 235, 23);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Chosen person");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(0, 331, 91, 15);
        getContentPane().add(jLabel5);
        jLabel5.setBounds(10, 370, 180, 220);

        nextPlayer.setText("Next Player");
        nextPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPlayerActionPerformed(evt);
            }
        });
        getContentPane().add(nextPlayer);
        nextPlayer.setBounds(240, 540, 120, 23);

        findWho.setText("Find who");
        findWho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findWhoActionPerformed(evt);
            }
        });
        getContentPane().add(findWho);
        findWho.setBounds(390, 540, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private boolean getAList(Player p, int no) {
        boolean an=false;
        if (p.erwthseis.contains(no)) {
            an=true;
} else {
            an=false;
}
        return an;
    }
    
    
    public int cleverQuestion2(Player p) {
        
        int n1=-1;
       ArrayList<Integer> questions = new ArrayList<Integer>();
       int Tmoustache=0;
       int Fmoustache=0;
       int Tglass=0;
       int Fglass=0;
       int That=0;
       int Fhat=0;
       int Tmale=0;
       int Fmale=0;
       int Tbeard=0;
       int Fbeard=0;
       int Tbald=0;
       int Fbald=0;
       int Teyebrows=0;
       int Feyebrows=0;
        
                //na mhn tsekarei kan an h erwthsh exei ginei h exei akurwthei
              if (!p.erwthseis.contains(0)) {  
                  //chekarei gia kathe karta
                    for (int i=0; i<p.mauresKartes.length; i++) {
                        //gia autes p exei krathsei entos paixnidiou
                           if (p.mauresKartes[i]==1) {
                                if (p.persons[i].getHasMoustache()==true){
                                Tmoustache++;
                                } else {
                                Fmoustache++;
               }
            }
                    }
                // Βλεπωντας ολες τις μαυρες καρτες σε σχεση με το moustache..αν  ειναι κ το true k to false
                //panw apo 1 σημαινει οτι αξιζει να γινει η ερωτηση οποτε βαζω τον αριθμο της ερωτησης στο 
                //questions. (δλδ υπαρχει χαρακτηρας κ με κ χωρις μουστακι αρα εχει νοημα).
                //ΑΝ ενα απο τα δυο εμεινε στο 0, σημαινει οτι Η ολοι χαρακτηρες δεν εχουν μουστακι Η ολοι εχουν,
                //οποτε δεν εχει νοημα η ερωτηση κ κανω add τον αριθμο της ερωτησης στην arraylist erwthseis 
                
                //ΚΟΙΝΩΣ ΤΣΕΚΑΡΩ ΑΝ ΓΙΑ ΚΑΘΕ ΕΡΩΤΗΣΗ ΣΤΙΣ ΕΝΑΠΟΜΕΙΝΑΝΤΕΣ ΜΑΥΡΕΣ ΚΑΡΤΕΣ ΥΠΑΡΧΕΙ ΚΑΙ Π.Χ ΜΕ ΜΟΥΣΤΑΚΙ
                //Κ ΧΩΡΙΣ ΓΙΑ ΝΑ ΚΡΑΤΗΣΩ ΤΗΝ ΕΩΤΗΣΗ ΣΤΙΣ ΧΡΗΣΙΜΕΣ (questions) ΑΛΛΙΩΣ ΤΗ ΒΑΖΩ Σ ΑΥΤΕΣ Π ΕΓΙΝΑΝ (erwthseis) 
                     if (Tmoustache==0 || Fmoustache==0) {
                    p.erwthseis.add(0);
                } else {
                    questions.add(0);
                }  
              }
              if (!p.erwthseis.contains(1)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getWearGlasses()==true){
                      Tglass++;
                  } else {
                      Fglass++;
                  }
                  }   
              }
                   if (Tglass==0 || Fglass==0) {
                    p.erwthseis.add(1);
                } else {
                    questions.add(1);
                }
            }
              if (!p.erwthseis.contains(2)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getWearHat()==true){
                      That++;
                  } else {
                      Fhat++;
                  }
                  }   
              }
                   if (That==0 || Fhat==0) {
                    p.erwthseis.add(2);
                } else {
                    questions.add(2);
                }
            }
             if (!p.erwthseis.contains(3)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getIfMale()==true){
                      Tmale++;
                  } else {
                      Fmale++;
                  }
                  }   
              }
                   if (Tmale==0 || Fmale==0) {
                    p.erwthseis.add(3);
                } else {
                    questions.add(3);
                }
             }
              if (!p.erwthseis.contains(4)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getHasBeard()==true){
                      Tbeard++;
                  } else {
                      Fbeard++;
                  }
                  }   
              }
                  System.out.println("tbeard " + Tbeard);
                  System.out.println("fbeard " + Fbeard);
                   if (Tbeard==0 || Fbeard==0) {
                    p.erwthseis.add(4);
                    System.out.println("aa");
                } else {
                    questions.add(4);
                    System.out.println("gh");
                }
             }
           if (!p.erwthseis.contains(5)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getIsBald()==true){
                      Tbald++;
                  } else {
                      Fbald++;
                  }
                  }   
              }
                  System.out.println("tb " + Tbald);
                  System.out.println("fb " + Fbald);
                   if (Tbald==0 || Fbald==0) {
                    p.erwthseis.add(5);
                    System.out.println("ba");
                } else {
                    questions.add(5);
                    System.out.println("bh");
                }
        
             }
           if (!p.erwthseis.contains(6)) {
                  for (int i=0; i<p.mauresKartes.length; i++) {
                      if (p.mauresKartes[i]==1) {
                  if (p.persons[i].getBigEyeBrows()==true){
                      Teyebrows++;
                  } else {
                      Feyebrows++;
                  }
                  }   
              }
                  System.out.println("tb " + Tbald);
                  System.out.println("fb " + Fbald);
                   if (Teyebrows==0 || Feyebrows==0) {
                    p.erwthseis.add(6);
                    System.out.println("ba");
                } else {
                    questions.add(6);
                    System.out.println("bh");
                }
        
             }
             
              do {
              int n= (int)(Math.random()*questions.size());
              n1 = questions.get(n);
              
              System.out.println("n is" + n);
              System.out.println("n1 is " + n1);
              System.out.println("size is " + questions.size());
              
              } while (getAList(p,n1));
              
              for (int i=0; i<questions.size(); i++) {
                  System.out.println("q "+ questions.get(i));
              }
              for (int i=0; i<p.erwthseis.size(); i++) {
                  System.out.println("er " + p.erwthseis.get(i));
              }
              
              return n1;
    }
    
    private void moustacheButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moustacheButtonActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound==-1 || quesForThisRound==0) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getHasMoustache()) {
                    System.out.println("The wanted person has moustache!");
                    JOptionPane.showMessageDialog(null, "The wanted person has moustache!");
                    //quesForThisRound = 0;
                } else {
                    System.out.println("The wanted person hasn't moustache..");
                    JOptionPane.showMessageDialog(null, "The wanted person hasn't moustache..");
                    //quesForThisRound = 0;
                }
                if (quesForThisRound != 0) {
                int n=-1;
                
                
                n = cleverQuestion2(p2);
                
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 0;
                
        }  else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_moustacheButtonActionPerformed

    
    
    public void autoQuestion(int n) {
        
        if (n==0) {
            JOptionPane.showMessageDialog(null, "Computer asked if person has moustache");
            if (p1.persons[p1.getPlayerToBeFound()].getHasMoustache()==true) {
            //tseakrw gia kathe xarakthra an exei moustaki, an den kanw 0 th thesh tou stis maures kartes
                for (int i =0; i<p1.persons.length; i++) {
                    if (p1.persons[i].getHasMoustache()==false) {
                        p2.mauresKartes[i]=0;
                    }
                } 
                //an exei moustaki..akurwnw th erwthsh isitmale? xerw oti einai antras
                p2.erwthseis.add(3); 
            } else {
               for (int i =0; i<p1.persons.length; i++) {
                    if (p1.persons[i].getHasMoustache()==true) {
                        p2.mauresKartes[i]=0;
                    }
                } 
        }
    } else if (n==1) {
            JOptionPane.showMessageDialog(null, "Computer asked if person wear glasses");
            if (p1.persons[p1.getPlayerToBeFound()].getWearGlasses()==true) {
               
                for (int i =0; i<p1.persons.length; i++) {
                    if (p1.persons[i].getWearGlasses()==false) {
                        p2.mauresKartes[i]=0;
                    }
                }  
            } else {
                for (int i =0; i<p1.persons.length; i++) {
                    if (p1.persons[i].getWearGlasses()==true) {
                        p2.mauresKartes[i]=0;
                    }
            }
            }
    } else if (n==2) {
            JOptionPane.showMessageDialog(null, "Computer asked if person wear hat");
            if (p1.persons[p1.getPlayerToBeFound()].getWearHat()==true) {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getWearHat()==false) {
                        p2.mauresKartes[i]=0;
                    }
                }   
            } else {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getWearHat()==true) {
                        p2.mauresKartes[i]=0;
                    }
                }
            }  
        } else if (n==3) {
            JOptionPane.showMessageDialog(null, "Computer asked if person is male");
            if (p1.persons[p1.getPlayerToBeFound()].getIfMale()==true) {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getIfMale()==false) {
                        p2.mauresKartes[i]=0;
                    }
                }  
            } else {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getIfMale()==true) {
                        p2.mauresKartes[i]=0;
                    }
                }
                //xerw oti einai gunaika opote na mh rwthsei gia moustaki,falakra,mousia
                p2.erwthseis.add(0);
                p2.erwthseis.add(4);
                p2.erwthseis.add(5);  
            }
        } else if (n==4) {
            JOptionPane.showMessageDialog(null, "Computer asked if person has beards");
            if (p1.persons[p1.getPlayerToBeFound()].getHasBeard()==true) {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getHasBeard()==false) {
                        p2.mauresKartes[i]=0;
                    }
                    //xerw oti einai antras mh rwthsei gia male
                    p2.erwthseis.add(3);
                }  
            } else {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getHasBeard()==true) {
                        p2.mauresKartes[i]=0;
                    }
                }
                 
            }
        } else if (n==5) {
            JOptionPane.showMessageDialog(null, "Computer asked if person is bald");
            if (p1.persons[p1.getPlayerToBeFound()].getIsBald()==true) {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getIsBald()==false) {
                        p2.mauresKartes[i]=0;
                    }
                    //xerw oti einai antras mh rwthsei gia male
                    p2.erwthseis.add(3);
                }  
            } else {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getIsBald()==true) {
                        p2.mauresKartes[i]=0;
                    }
                }
        }
        } else if (n==6) {
            JOptionPane.showMessageDialog(null, "Computer asked if person has big eyebrows");
            if (p1.persons[p1.getPlayerToBeFound()].getBigEyeBrows()==true) {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getBigEyeBrows()==false) {
                        p2.mauresKartes[i]=0;
                    }
                }  
            } else {
                for (int i = 0; i< p1.persons.length; i++) {
                    if (p1.persons[i].getBigEyeBrows()==true) {
                        p2.mauresKartes[i]=0;
                    }
                }
        }
        }
        
    }
    
    //xrhsimopoiw to autoQuestion apo panw p kanei automata check gia kathe person anti na to kanw manual
    public void autoQuestion1(int n) {
        if (n==0) {
            JOptionPane.showMessageDialog(null, "Computer asked if person has moustache");
            if (p1.persons[p1.getPlayerToBeFound()].getHasMoustache()==true) {
                p2.mauresKartes[1]=0;
                p2.mauresKartes[2]=0;
                p2.mauresKartes[3]=0;
                p2.mauresKartes[5]=0;
                //an exei moustaki..akurwnw th erwthsh isitmale? xerw oti einai antras
                p2.erwthseis.add(3);
                
            } else {
                p2.mauresKartes[0]=0;
                p2.mauresKartes[4]=0;
            }
        } else if (n==1) {
            JOptionPane.showMessageDialog(null, "Computer asked if person wear glasses");
            if (p1.persons[p1.getPlayerToBeFound()].getWearGlasses()==true) {
                p2.mauresKartes[0]=0;
                p2.mauresKartes[3]=0;
                p2.mauresKartes[4]=0;
                p2.mauresKartes[5]=0;
            } else {
                p2.mauresKartes[1]=0;
                p2.mauresKartes[2]=0;
            }
        } else if (n==2) {
            JOptionPane.showMessageDialog(null, "Computer asked if person wear hat");
            if (p1.persons[p1.getPlayerToBeFound()].getWearHat()==true) {
                p2.mauresKartes[0]=0;
                p2.mauresKartes[1]=0;
                p2.mauresKartes[2]=0;
                p2.mauresKartes[4]=0;
                p2.mauresKartes[5]=0;
            } else {
                p2.mauresKartes[3]=0;
            }
        } else if (n==3) {
            JOptionPane.showMessageDialog(null, "Computer asked if person is male");
            if (p1.persons[p1.getPlayerToBeFound()].getIfMale()==true) {
                p2.mauresKartes[5]=0;
            } else {
                p2.mauresKartes[0]=0;
                p2.mauresKartes[1]=0;
                p2.mauresKartes[2]=0;
                p2.mauresKartes[3]=0;
                p2.mauresKartes[4]=0;
                //xerw oti einai gunaika opote na mh rwthsei gia moustaki,falakra,mousia
                p2.erwthseis.add(0);
                p2.erwthseis.add(4);
                p2.erwthseis.add(5);
                
            }
        }
    }
    
    
    private void wearGlassesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wearGlassesActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==1) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getWearGlasses()) {
                    System.out.println("The wanted person wears glasses!");
                    JOptionPane.showMessageDialog(null, "The wanted person wears glasses!");
                    //quesForThisRound = 1;
                } else {
                    System.out.println("The wanted person does not wear glasses..");
                    JOptionPane.showMessageDialog(null, "The wanted person does not wear glasses..");
                    //quesForThisRound = 1;
                }
                if (quesForThisRound != 1) {
                int n=-1;
                
                
                //do {
                    //n = (int)(Math.random()*12);
                 //   n = (int)(Math.random()*7);
                 //   System.out.println("n is " + n);
                //} while (getAList(p2,n));
                 n = cleverQuestion2(p2);
                
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 1;
           
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_wearGlassesActionPerformed

    private void wearHatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wearHatActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==2) {
           
                if (p2.persons[p2.getPlayerToBeFound()].getWearHat()) {
                    System.out.println("The wanted person wears hat!");
                    JOptionPane.showMessageDialog(null, "The wanted person wears hat!");
                    //quesForThisRound = 2;
                } else {
                    System.out.println("The wanted person does not wear hat..");
                    JOptionPane.showMessageDialog(null, "The wanted person does not wear hat..");
                    //quesForThisRound = 2;
                }
                if (quesForThisRound != 2) {
                int n=-1;
                
                
               // do {
                    //n = (int)(Math.random()*12);
               //     n = (int)(Math.random()*7);
               //     System.out.println("n is " + n);
              //  } while (getAList(p2,n));
                n = cleverQuestion2(p2); 
                
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 2;
            
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_wearHatActionPerformed

    private void isItMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isItMaleActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==3) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getIfMale()) {
                    System.out.println("The wanted person is male!");
                    JOptionPane.showMessageDialog(null, "The wanted person is male!");
                    //quesForThisRound = 3;
                } else {
                    System.out.println("The wanted person is not male");
                    JOptionPane.showMessageDialog(null, "The wanted person is not male");
                    //quesForThisRound = 3;
                }
                if (quesForThisRound != 3) {
                int n=-1;
                
                //do {
                    //n = (int)(Math.random()*12);
                //    n = (int)(Math.random()*7);
                //    System.out.println("n is " + n);
                //} while (getAList(p2,n));
                 n = cleverQuestion2(p2);
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 3;
           
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_isItMaleActionPerformed

    //den eida an douleuei
    private void hasBeardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hasBeardsActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==4) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getHasBeard()) {
                    System.out.println("The wanted person has beard!");
                    JOptionPane.showMessageDialog(null, "The wanted person has beard!");
                    
                } else {
                    System.out.println("The wanted person has not beard..");
                    JOptionPane.showMessageDialog(null, "The wanted person has not beard..");
            }
                if (quesForThisRound != 4) {
                int n=-1;
                
                //do {
                    //n = (int)(Math.random()*12);
                //    n = (int)(Math.random()*7);
                //    System.out.println("n is " + n);
                //} while (getAList(p2,n));
                 n = cleverQuestion2(p2);
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 4;
                
                
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_hasBeardsActionPerformed

    //na dokimastei
    private void isBaldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isBaldActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==5) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getIsBald()) {
                    System.out.println("The wanted person is bald!");
                    JOptionPane.showMessageDialog(null, "The wanted person is bald!");
                    
                } else {
                    System.out.println("The wanted person is not bald..");
                    JOptionPane.showMessageDialog(null, "The wanted person is not bald..");
                    
                }
                if (quesForThisRound != 5) {
                int n=-1;
                
                
                //do {
                    //n = (int)(Math.random()*12);
                //    n = (int)(Math.random()*7);
                //    System.out.println("n is " + n);
                //} while (getAList(p2,n));
                 n = cleverQuestion2(p2);
                
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 5;
            
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_isBaldActionPerformed

    //na dokimastei
    private void bigEyeBrowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigEyeBrowsActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==6) {
            
                if (p2.persons[p2.getPlayerToBeFound()].getBigEyeBrows()) {
                    System.out.println("The wanted person has big eyebrows!");
                    JOptionPane.showMessageDialog(null, "The wanted person has big eyebrows!");
                } else {
                    System.out.println("The wanted person has not big eyebrows..");
                    JOptionPane.showMessageDialog(null, "The wanted person has not big eyebrows..");
                }
                if (quesForThisRound != 6) {
                int n=-1;
                
                
                //do {
                    //n = (int)(Math.random()*12);
                //    n = (int)(Math.random()*7);
                //    System.out.println("n is " + n);
                //} while (getAList(p2,n));
                 n = cleverQuestion2(p2);
                
                p2.erwthseis.add(n);
                autoQuestion(n);
                }
                quesForThisRound = 6;
            
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_bigEyeBrowsActionPerformed

    private void eyesColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eyesColorActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==7) {
            if (seira == 1) {
                String ans =  p2.persons[p2.getPlayerToBeFound()].getEyesColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 7;

            } else if (seira == 2) {
                String ans = p1.persons[p1.getPlayerToBeFound()].getEyesColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 7;
            }
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_eyesColorActionPerformed

    private void hairColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hairColorActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==8) {
            if (seira == 1) {
                String ans =  p2.persons[p2.getPlayerToBeFound()].getHairColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 8;

            } else if (seira == 2) {
                String ans = p1.persons[p1.getPlayerToBeFound()].getHairColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 8;
            }
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_hairColorActionPerformed

    private void hatColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hatColorActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==9) {
            if (seira == 1) {
                String ans =  p2.persons[p2.getPlayerToBeFound()].getHatColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 9;

            } else if (seira == 2) {
                String ans = p1.persons[p1.getPlayerToBeFound()].getHatColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 9;
            }
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_hatColorActionPerformed

    private void skinColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skinColorActionPerformed
        // TODO add your handling code here:
        if (quesForThisRound ==-1 || quesForThisRound ==10) {
            if (seira == 1) {
                String ans =  p2.persons[p2.getPlayerToBeFound()].getSkinColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 10;

            } else if (seira == 2) {
                String ans = p1.persons[p1.getPlayerToBeFound()].getSkinColor();
                System.out.println(ans);
                JOptionPane.showMessageDialog(null, ans);
                quesForThisRound = 10;
            }
        } else {
            JOptionPane.showMessageDialog(null, "You ve already asked a question for this round");
        }
    }//GEN-LAST:event_skinColorActionPerformed

    private void clickOnFace (int i,String str ,JButton jb) {
        if (p1.mauresKartes[i]==1) {
                p1.mauresKartes[i]=0;
                jb.setIcon(new ImageIcon(img));
            } else {
                p1.mauresKartes[i]=1;
                try {
                Image img1 = ImageIO.read(getClass().getResource(str));
                jb.setIcon(new ImageIcon(img1));
                } catch (Exception ex) {
                System.out.println(ex);
                 }
    }
    }
    
    
    private void TylerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TylerActionPerformed
        // TODO add your handling code here:
        clickOnFace (0,"Tyler.png" ,Tyler);
    }//GEN-LAST:event_TylerActionPerformed

    private void JosephActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JosephActionPerformed
        // TODO add your handling code here:
        clickOnFace (1,"Joseph.png" ,Joseph);
    }//GEN-LAST:event_JosephActionPerformed

    private void NickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NickActionPerformed
        // TODO add your handling code here:
        clickOnFace (2,"Nick.png" ,Nick);
    }//GEN-LAST:event_NickActionPerformed

    private void BrandonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrandonActionPerformed
        // TODO add your handling code here:
        clickOnFace (3,"Brandon.png",Brandon);
    }//GEN-LAST:event_BrandonActionPerformed

    private void ConnorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnorActionPerformed
        // TODO add your handling code here:
        clickOnFace (4,"Connor.png",Connor);
    }//GEN-LAST:event_ConnorActionPerformed

    private void KyleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KyleActionPerformed
        // TODO add your handling code here:
        clickOnFace (5,"Kyle.png" ,Kyle);
    }//GEN-LAST:event_KyleActionPerformed

    private void nextPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPlayerActionPerformed
        // TODO add your handling code here:
        
                int j=0;
                for (int i=0; i<p2.mauresKartes.length;i++) {
                    System.out.println("mk " + p2.mauresKartes[i]);
                    if(p2.mauresKartes[i]==1) {
                        j++;
                    }
                }
                if (j==1) {
                    this.dispose();
                    Integer[] mk = new Integer[p2.mauresKartes.length];
                    for (int i=0;i<mk.length;i++) {
                        mk[i]=p2.mauresKartes[i];
                    }
                    
                    int a = Arrays.asList(mk).indexOf(1);
                    System.out.println("a is " + a);
                    JOptionPane.showMessageDialog(null, "Computer guess person is " + p1.persons[a].getName() + " and it is " + p1.persons[p1.getPlayerToBeFound()].getName() );
                } else {
                    this.dispose();
                QuestionsWithComp qwc2 = new QuestionsWithComp();
                qwc2.setVisible(true);
                qwc2.setResizable(false);
                }
                
                
    }//GEN-LAST:event_nextPlayerActionPerformed

    private void findWhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findWhoActionPerformed
        // TODO add your handling code here:
        this.dispose();
        FindingBoard fb = new FindingBoard(p2,1);
        fb.setVisible(true);
    }//GEN-LAST:event_findWhoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuestionsWithComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuestionsWithComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuestionsWithComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuestionsWithComp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuestionsWithComp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Brandon;
    private javax.swing.JButton Connor;
    private javax.swing.JButton Joseph;
    private javax.swing.JButton Kyle;
    private javax.swing.JButton Nick;
    private javax.swing.JButton Tyler;
    private javax.swing.JButton bigEyeBrows;
    private javax.swing.JButton eyesColor;
    private javax.swing.JButton findWho;
    private javax.swing.JButton hairColor;
    private javax.swing.JButton hasBeards;
    private javax.swing.JButton hatColor;
    private javax.swing.JButton isBald;
    private javax.swing.JButton isItMale;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton moustacheButton;
    private javax.swing.JButton nextPlayer;
    private javax.swing.JButton skinColor;
    private javax.swing.JButton wearGlasses;
    private javax.swing.JButton wearHat;
    // End of variables declaration//GEN-END:variables
}
